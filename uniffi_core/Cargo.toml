[package]
name = "uniffi_core"
description = "a multi-language bindings generator for rust (runtime support code)"
documentation = "https://mozilla.github.io/uniffi-rs"
homepage = "https://mozilla.github.io/uniffi-rs"
repository = "https://github.com/mozilla/uniffi-rs"
version = "0.27.1"
authors = ["Firefox Sync Team <sync-team@mozilla.com>"]
license = "MPL-2.0"
edition = "2021"
keywords = ["ffi", "bindgen"]
readme = "../README.md"

[dependencies]
# Re-exported dependencies used in generated Rust scaffolding files.
anyhow = "1"
async-compat = { version = "0.2.1", optional = true }
bytes = "1.3"
camino = "1.0.8"
log = "0.4"
once_cell = "1.10.0"
# Use the `oneshot-uniffi` crate to get our `oneshot` dependency.
# That crate is a fork of `oneshot` that removes the `loom` target/dependency, which makes it easier to vendor UniFFI into the mozilla-central repository.
# Enable "async" so that receivers implement Future, no need for "std" since we don't block on them.
oneshot = { package = "oneshot-uniffi", version = "0.1.6", features = ["async"] }
# Regular dependencies
paste = "1.0"
static_assertions = "1.1.0"

[features]
default = []

# Enable support for Tokio's futures.
# This must still be opted into on a per-function basis using `#[uniffi::export(async_runtime = "tokio")]`.
tokio = ["dep:async-compat"]
